#include <bits/stdc++.h>
#define fi first
#define se second
 
using namespace std;
using ll = long long;
const int Mod = 1e9+7;

int a, b, c, d, e, x, y;
int arr[6005][6005], dp[6005][6005];

void builprefixSum() {
    for (int i = 1; i <= a; i++) {
        for (int j = 1; j <= b; j++) {
            dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1] + arr[i][j];
        }
    }
}

bool check(int X) {
    for (int i = 1; i+X-1 <= a; i++) {
        for (int j = 1; j+X-1 <= b; j++) {
            if (dp[i+X-1][j+X-1] + dp[i-1][j-1] - dp[i+X-1][j-1] - dp[i-1][j+X-1] <= e) return true;
        }
    }
    return false;   
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    //code here
    cin >> a >> b >> c >> d >> e;
    memset(arr,0,sizeof(arr));
    memset(dp,0,sizeof(dp)); // prefix sum
    while (c--) {
        cin >> x >> y;
        arr[x][y] = 1;
    }
    builprefixSum();
    int ans = 0;
    int l = d, r = min(a,b)/d*d;
    while (l <= r) {
        int m = (l + r) / 2;
        int X = m / d * d;
        if (check(X)) {
            ans = X;
            l = X + d;
        }
        else {
            r = X - d;
        }
    }
    cout << ans << '\n';
}
